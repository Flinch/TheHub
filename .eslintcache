[{"/Users/malik/the_hub/src/components/Youtube/YoutubePage.js":"1","/Users/malik/the_hub/src/components/Reddit/RedditPage.js":"2","/Users/malik/the_hub/src/api/reddit.js":"3","/Users/malik/the_hub/src/components/Youtube/SearchBar.js":"4","/Users/malik/the_hub/src/components/Twitter/RuleList.js":"5","/Users/malik/the_hub/src/components/Youtube/VideoItem.js":"6","/Users/malik/the_hub/src/components/Youtube/LastSeen.js":"7","/Users/malik/the_hub/src/api/youtube.js":"8"},{"size":1570,"mtime":1611976863100,"results":"9","hashOfConfig":"10"},{"size":1325,"mtime":1611977166325,"results":"11","hashOfConfig":"10"},{"size":151,"mtime":1611722936712,"results":"12","hashOfConfig":"10"},{"size":699,"mtime":1611974273469,"results":"13","hashOfConfig":"10"},{"size":4544,"mtime":1611632887781,"results":"14","hashOfConfig":"10"},{"size":949,"mtime":1611539225250,"results":"15","hashOfConfig":"10"},{"size":196,"mtime":1611519810825,"results":"16","hashOfConfig":"10"},{"size":249,"mtime":1611539126413,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g57c8j",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/malik/the_hub/src/components/Youtube/YoutubePage.js",["38"],"/Users/malik/the_hub/src/components/Reddit/RedditPage.js",["39","40"],"import React from \"react\";\nimport reddit from \"../../api/reddit\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\";\nimport RedditListings from \"./RedditListings\";\nimport ExpandedPost from \"./ExpandedPost\";\nimport RedditLogo from \"./images/reddit.png\";\nimport \"./RedditListings.css\";\n\nclass RedditPage extends React.Component {\n\tstate = { reddit_data: [], term: \"\", selectedPost: [] };\n\tlimit = 50;\n\n\tonSubmitTerm = async (term) => {\n\t\tconst response = await reddit.get(`${term}.json?limit=${this.limit}`);\n\t\tthis.setState({ reddit_data: response.data.data.children });\n\t};\n\n\tasync componentDidMount() {\n\t\tconst response = await axios.get(\n\t\t\t`https://api.reddit.com?limit=${this.limit}`\n\t\t);\n\t\tthis.setState({ reddit_data: response.data.data.children });\n\t}\n\n\tonSelectedPost = (selectedPost) => {\n\t\tthis.setState((selectedPost: selectedPost));\n\t\treturn;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"ui container\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"container reddit\"\n\t\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t\t>\n\t\t\t\t\t<img src={RedditLogo} class=\"image-container\" />\n\t\t\t\t</div>\n\t\t\t\t<SearchBar onSubmitTerm={this.onSubmitTerm} />\n\t\t\t\t<RedditListings\n\t\t\t\t\treddit_data={this.state.reddit_data}\n\t\t\t\t\tclassName=\"listings-container\"\n\t\t\t\t\tselectedPost={this.onSelectedPost}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RedditPage;\n",["41","42"],"/Users/malik/the_hub/src/api/reddit.js",["43"],"import React from \"react\";\nimport axios from \"axios\";\n\nexport default axios.create({\n\tbaseURL: \"https://www.reddit.com/r/\",\n\tresponseType: \"json\",\n});\n","/Users/malik/the_hub/src/components/Youtube/SearchBar.js",[],"/Users/malik/the_hub/src/components/Twitter/RuleList.js",[],"/Users/malik/the_hub/src/components/Youtube/VideoItem.js",["44"],"import React from \"react\";\nimport \"./VideoItem.css\";\nimport LastSeen from \"./LastSeen\";\nimport Truncate from \"react-truncate\";\nimport decode from \"decode-html\";\n\nconst VideoItem = ({ video, onSelectedVideo }) => {\n\tconst truncate = (str) => {\n\t\treturn str.length > 40 ? str.substring(0, 50) + \"...\" : str;\n\t};\n\n\tconst convertDate = () => {\n\t\tconst newDate = new Date(video.snippet.publishTime);\n\t\treturn newDate;\n\t};\n\n\treturn (\n\t\t<div onClick={() => onSelectedVideo(video)} className=\"video item\">\n\t\t\t<img\n\t\t\t\tclass=\"ui image thumbnail\"\n\t\t\t\tsrc={video.snippet.thumbnails.medium.url}\n\t\t\t\talt={video.snippet.title}\n\t\t\t/>\n\t\t\t<div class=\"content\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<h5> {decode(truncate(video.snippet.title))} </h5>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"description summary\">\n\t\t\t\t\t<small>\n\t\t\t\t\t\t{video.snippet.channelTitle}\n\t\t\t\t\t\t<LastSeen date={convertDate()} />\n\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default VideoItem;\n","/Users/malik/the_hub/src/components/Youtube/LastSeen.js",[],"/Users/malik/the_hub/src/api/youtube.js",[],{"ruleId":"45","severity":1,"message":"46","line":39,"column":6,"nodeType":"47","endLine":39,"endColumn":52},{"ruleId":"48","severity":1,"message":"49","line":6,"column":8,"nodeType":"50","messageId":"51","endLine":6,"endColumn":20},{"ruleId":"45","severity":1,"message":"46","line":38,"column":6,"nodeType":"47","endLine":38,"endColumn":54},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"48","severity":1,"message":"56","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"57","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":16},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ExpandedPost' is defined but never used.","Identifier","unusedVar","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"'React' is defined but never used.","'Truncate' is defined but never used.","no-global-assign","no-unsafe-negation"]